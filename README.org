#+STARTUP: overview inlineimages

#+ATTR_HTML: :style border:2px solid black
#+ATTR_HTML: :align center
[[file:thetasigma-logo.png]]


This is an exercise in structuring my configuration and learning more elisp.

Some of the goals I have for this exercise include

1) Minimal calls to external package repositories from elpa and melpa and
   maximize the use of Emacs' builtin packages
2) Portability between OSs and systems
3) Improving the UI and interaction schema for Emacs.
   - Part of this is my custom theme. Rule of thumb here is to minimize
     definition of custom faces. Only customize a face if it doesn't adhere to a
     theme principles or doesn't know how to inherit from default Emacs faces.
   - A more modern(? To be defined) way of interacting with the mini-buffer.
   - Child-frames for completions ala posframe.
   - Adding context where possible.
   - Providing easy access to help & documentation.

* Progress
- [X] Bare-bones setup to build from.
- [X] Bare-bones recreation of [[https://github.com/skye-repos/TransSide-theme][my old theme]] =TransSide-Theme=.
- [-] Simple mode-line.
  - [ ] Git version details
  - [X] Custom RO Indicator
  - [X] File name and buffer mode indicator
- Replace the use of the follow packages with builtin packages
  - [ ] =expreg= (my prototype sucks, this is better and uses the builtin
    =treesit= Maybe some heavily cut down version?).
  - [ ] =magit= (=vc-mode= seems good. Maybe combine transient with it?).
  - [ ] =vertico-posframe= (either tie it in with the logic for the mini-buffer or
    use this for the mini-buffer echo messages).
  - [ ] =org-modern= (there has to be an easier way?). Maybe use =prettify-symbols-mode=
- Consider the following functionality
  - [ ] Treating the mini-buffer as a ephemeral child frame.
  - [ ] Quick help mode
    - [ ] Emacs in general
    - [ ] Org-mode specifically
  - [ ] Dashboard
  - [ ] GNU Hyperbole
    - [ ] =HyControl= seems to be more powerful than =windmove=, and intuitive.
    - [ ] =Koutliner=. How does it interact with Org-mode?
    - [ ] Buttons for use in the Dashboard?
    - [ ] Use the builtin-library to customize and expose only what is needed?

* Installation
1) Install libenchant. [[https://github.com/minad/jinx?tab=readme-ov-file#installation][You can follow the instructions here.]]
2) Install the font =0xProto=. You can set your own font in the =preload/ui-setup.el=.
3) Install [[https://github.com/blahgeek/emacs-lsp-booster/releases][emacs-lsp-booster]] into =~/.local/bin/=

Then just git clone into the =user-emacs-directory=
#+begin_src shell
  git clone https://github.com/skye-repos/thetasigma-emacs.git ~/.config/emacs
#+end_src

You can launch Emacs now (or restart the daemon) and it should work. The first
start may take a bit to pull in all the packages (will be minimized eventually)

* Usage Notes
Any emacs-lisp fill you put in one of the following directories will automatically be loaded by Emacs.

1) =preload=
2) =thetasigma=
3) =user=

You can place your own configurations in the thetasigma-user directory.

# Local Variables:
# jinx-local-words: "posframe"
# End:
